spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: local
  datasource:
    url: jdbc:postgresql://database-2.cpvhgxlcfvwx.us-east-1.rds.amazonaws.com:5432/oauth2
    username: zevrant
    password: ${rds.oauth.password}
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
server:
  port: 9001
  servlet:
    context-path: /zevrant-oauth2-service
  ssl:
    key-store: /storage/keys/zevrant-services.p12
    key-store-type: PKCS12
    key-store-password: ${ssl.keystore.password}

oauth2:
  keystore:
    alias: 1

context:
  initializer:
    classes: net.zevrant.services.security.common.secrets.management.services.EncryptedPropertyContextInitializer

zevrant:
  bucketName: 'zevrant-resources'
  keystore: 'prod/ssl/keystore.p12'
  encrypted:
    properties: ssl/keystore/password,rds/oauth/password
  oauth:
    clients:
      users:
        - client-id: test
          client-secret: '{noop}test'
          grant-types:
            - client_credentials
          scopes:
            - DEFAULT
          redirect-uris: localhost:8080
          granted-authorities:
            - DEFAULT
          access-token-validity-seconds: 300
          refresh-token-validity-seconds: 300
          auto-approve: true
          additional-information:
            -
security:
  oauth2:
    client:
      access-token-uri: /oauth/token

management:
  endpoints:
    web:
      exposure:
        include: health,info
  health:
    ldap:
      enabled: false