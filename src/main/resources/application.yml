spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: local
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2?createDatabaseIfNotExist=true
    username: sa
    password: ${rds.oauth.password}
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: zevrant-oauth2-service
server:

#    key-store-password: ${ssl.keystore.password}
  port: 9001
  servlet:
    context-path: /${spring.application.name}

oauth2:
  keystore:
    alias: serverkey

zevrant:
  ssl:
    key-store: /storage/keys/zevrant-services.p12
    key-store-password: ${ssl.keystore.password}
  bucketName: 'zevrant-resources'
  keystore: 'dev/ssl/keystore.p12'
  encrypted:
    properties: ssl/keystore/password,rds/oauth/password

context:
  initializer:
    classes: net.zevrant.services.security.common.secrets.management.services.EncryptedPropertyContextInitializer

security:
  oauth2:
    client:
      access-token-uri: /oauth/token

management:
  endpoints:
    web:
      exposure:
        include: health,info
  health:
    ldap:
      enabled: false

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8999/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    prefer-ip-address: true

logging:
  level:
    root: INFO
    net.zevrant.services.zevrant.oauth2.service: INFO

